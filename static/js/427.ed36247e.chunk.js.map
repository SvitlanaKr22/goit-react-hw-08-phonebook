{"version":3,"file":"static/js/427.ed36247e.chunk.js","mappings":"yTAKaA,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,kMAWJE,EAAQF,EAAAA,GAAAA,MAAH,qEAKLG,GAAQH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,mkBAwBLK,GAAeL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,6DAKZO,EAASP,EAAAA,GAAAA,OAAH,of,iHChDNE,E,QAAQF,GAAAA,MAAH,qE,uCCUZQ,EAAgB,CACpBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAGNC,EAAmBC,EAAAA,GAAW,CAClCJ,KAAMI,EAAAA,KAAaC,SAAS,YAC5BJ,MAAOG,EAAAA,KAAaH,MAAM,wBAAwBI,SAAS,YAC3DH,SAAUE,EAAAA,KAAaC,SAAS,cA4ClC,EAnCqB,WACnBC,QAAQC,IAAI,sBACZ,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAAC,KAAD,CACEV,cAAeA,EACfI,iBAAkBA,EAClBO,SAAU,SAACC,EAAQC,GACjBN,QAAQC,IAAII,GACZH,GAASK,EAAAA,EAAAA,IAASF,IAClBC,EAAQE,WACT,EAPH,UASE,UAAC,KAAD,YACE,UAACrB,EAAD,wBAEE,SAAC,KAAD,CAAOsB,KAAK,OAAOf,KAAK,OAAOgB,MAAM,eACrC,SAAC,KAAD,CAAchB,KAAK,OAAOiB,UAAU,YAEtC,UAACxB,EAAD,oBAEE,SAAC,KAAD,CAAOsB,KAAK,QAAQf,KAAK,QAAQgB,MAAM,gBACvC,SAAC,KAAD,CAAchB,KAAK,QAAQiB,UAAU,YAEvC,UAACxB,EAAD,uBAEE,SAAC,KAAD,CAAOsB,KAAK,OAAOf,KAAK,WAAWgB,MAAM,mBACzC,SAAC,KAAD,CAAchB,KAAK,WAAWiB,UAAU,YAE1C,SAAC,KAAD,CAAQF,KAAK,SAAb,0BAIP,EC3Dc,SAASG,IACtB,OACE,SAAC,KAAD,WACE,4BACE,SAAC,KAAD,WACE,+CAEF,SAAC,EAAD,QAIP,C","sources":["components/ContactForm/ContactForm.styled.js","components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Form as FormikForm } from 'formik';\nimport { Field as FormikField } from 'formik';\nimport { ErrorMessage as FormikError } from 'formik';\n\nexport const Form = styled(FormikForm)`\n  margin-left: 20px;\n  width: 30%;\n  padding: 8px;\n  border: 1px solid #2a2a2a;\n  border-radius: 0.25rem;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Field = styled(FormikField)`\n  display: block;\n  height: calc(2.25rem + 2px);\n  padding: 0.375rem 0.75rem;\n  font-family: inherit;\n  font-size: 1.4rem;\n  font-weight: 400;\n  line-height: 1.5;\n  color: #212529;\n  background-color: #fff;\n  background-clip: padding-box;\n  border: 1px solid #bdbdbd;\n  border-radius: 0.25rem;\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n\n  &:focus {\n    color: #212529;\n    background-color: #fff;\n    border-color: #bdbdbd;\n    outline: 0;\n    box-shadow: 0 0 0 0.2rem rgba(158, 158, 158, 0.25);\n  }\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  font-size: 1.2rem;\n  color: red;\n`;\n\nexport const Button = styled.button`\n  font: inherit;\n  cursor: pointer;\n  display: inline-block;\n  text-align: center;\n  text-decoration: none;\n  margin: 2px auto;\n  border: solid 1px transparent;\n  border-radius: 4px;\n  padding: 0.5em 1em;\n  color: #ffffff;\n  background-color: #9555af;\n  width: 50%;\n\n  &:active {\n    transform: translateY(1px);\n    filter: saturate(150%);\n  }\n\n  &:hover,\n  &:focus {\n    color: #9555af;\n    border-color: currentColor;\n    background-color: white;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Label } from './RegisterForm.styled';\nimport {\n  Form,\n  Field,\n  ErrorMessage,\n  Button,\n} from 'components/ContactForm/ContactForm.styled';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst validationSchema = Yup.object({\n  name: Yup.string().required('Required'),\n  email: Yup.string().email('Invalid email format').required('Required'),\n  password: Yup.string().required('Required'),\n});\n\n// const onSubmit = (values, actions, dispatch) => {\n//   console.log(values);\n//   dispatch(register(values));\n//   actions.resetForm();\n// };\n\nconst RegisterForm = () => {\n  console.log('FORMA Registration');\n  const dispatch = useDispatch();\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={(values, actions) => {\n        console.log(values);\n        dispatch(register(values));\n        actions.resetForm();\n      }}\n    >\n      <Form>\n        <Label>\n          User name\n          <Field type=\"text\" name=\"name\" title=\"User Name\" />\n          <ErrorMessage name=\"name\" component=\"div\" />\n        </Label>\n        <Label>\n          Email\n          <Field type=\"email\" name=\"email\" title=\"User email\" />\n          <ErrorMessage name=\"email\" component=\"div\" />\n        </Label>\n        <Label>\n          Password\n          <Field type=\"text\" name=\"password\" title=\"User password\" />\n          <ErrorMessage name=\"password\" component=\"div\" />\n        </Label>\n        <Button type=\"submit\">Register</Button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default RegisterForm;\n","//import { Helmet } from 'react-helmet';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport RegisterForm from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <HelmetProvider>\n      <div>\n        <Helmet>\n          <title>Registration</title>\n        </Helmet>\n        <RegisterForm />\n      </div>\n    </HelmetProvider>\n  );\n}\n"],"names":["Form","styled","FormikForm","Label","Field","FormikField","ErrorMessage","FormikError","Button","initialValues","name","email","password","validationSchema","Yup","required","console","log","dispatch","useDispatch","onSubmit","values","actions","register","resetForm","type","title","component","Register"],"sourceRoot":""}